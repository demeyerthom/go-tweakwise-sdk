/*
Tweakwise Navigator Backend API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backend

import (
	"encoding/json"
)

// ProductSummary struct for ProductSummary
type ProductSummary struct {
	ArticleNumber *string `json:"ArticleNumber,omitempty"`
	Name *string `json:"Name,omitempty"`
	Price *float64 `json:"Price,omitempty"`
	Brand *string `json:"Brand,omitempty"`
	Stock *int32 `json:"Stock,omitempty"`
	GroupCode *string `json:"GroupCode,omitempty"`
	Image *string `json:"Image,omitempty"`
	Url *string `json:"Url,omitempty"`
	Categories *[]int64 `json:"Categories,omitempty"`
}

// NewProductSummary instantiates a new ProductSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProductSummary() *ProductSummary {
	this := ProductSummary{}
	return &this
}

// NewProductSummaryWithDefaults instantiates a new ProductSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProductSummaryWithDefaults() *ProductSummary {
	this := ProductSummary{}
	return &this
}

// GetArticleNumber returns the ArticleNumber field value if set, zero value otherwise.
func (o *ProductSummary) GetArticleNumber() string {
	if o == nil || o.ArticleNumber == nil {
		var ret string
		return ret
	}
	return *o.ArticleNumber
}

// GetArticleNumberOk returns a tuple with the ArticleNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSummary) GetArticleNumberOk() (*string, bool) {
	if o == nil || o.ArticleNumber == nil {
		return nil, false
	}
	return o.ArticleNumber, true
}

// HasArticleNumber returns a boolean if a field has been set.
func (o *ProductSummary) HasArticleNumber() bool {
	if o != nil && o.ArticleNumber != nil {
		return true
	}

	return false
}

// SetArticleNumber gets a reference to the given string and assigns it to the ArticleNumber field.
func (o *ProductSummary) SetArticleNumber(v string) {
	o.ArticleNumber = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ProductSummary) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSummary) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ProductSummary) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ProductSummary) SetName(v string) {
	o.Name = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *ProductSummary) GetPrice() float64 {
	if o == nil || o.Price == nil {
		var ret float64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSummary) GetPriceOk() (*float64, bool) {
	if o == nil || o.Price == nil {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *ProductSummary) HasPrice() bool {
	if o != nil && o.Price != nil {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float64 and assigns it to the Price field.
func (o *ProductSummary) SetPrice(v float64) {
	o.Price = &v
}

// GetBrand returns the Brand field value if set, zero value otherwise.
func (o *ProductSummary) GetBrand() string {
	if o == nil || o.Brand == nil {
		var ret string
		return ret
	}
	return *o.Brand
}

// GetBrandOk returns a tuple with the Brand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSummary) GetBrandOk() (*string, bool) {
	if o == nil || o.Brand == nil {
		return nil, false
	}
	return o.Brand, true
}

// HasBrand returns a boolean if a field has been set.
func (o *ProductSummary) HasBrand() bool {
	if o != nil && o.Brand != nil {
		return true
	}

	return false
}

// SetBrand gets a reference to the given string and assigns it to the Brand field.
func (o *ProductSummary) SetBrand(v string) {
	o.Brand = &v
}

// GetStock returns the Stock field value if set, zero value otherwise.
func (o *ProductSummary) GetStock() int32 {
	if o == nil || o.Stock == nil {
		var ret int32
		return ret
	}
	return *o.Stock
}

// GetStockOk returns a tuple with the Stock field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSummary) GetStockOk() (*int32, bool) {
	if o == nil || o.Stock == nil {
		return nil, false
	}
	return o.Stock, true
}

// HasStock returns a boolean if a field has been set.
func (o *ProductSummary) HasStock() bool {
	if o != nil && o.Stock != nil {
		return true
	}

	return false
}

// SetStock gets a reference to the given int32 and assigns it to the Stock field.
func (o *ProductSummary) SetStock(v int32) {
	o.Stock = &v
}

// GetGroupCode returns the GroupCode field value if set, zero value otherwise.
func (o *ProductSummary) GetGroupCode() string {
	if o == nil || o.GroupCode == nil {
		var ret string
		return ret
	}
	return *o.GroupCode
}

// GetGroupCodeOk returns a tuple with the GroupCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSummary) GetGroupCodeOk() (*string, bool) {
	if o == nil || o.GroupCode == nil {
		return nil, false
	}
	return o.GroupCode, true
}

// HasGroupCode returns a boolean if a field has been set.
func (o *ProductSummary) HasGroupCode() bool {
	if o != nil && o.GroupCode != nil {
		return true
	}

	return false
}

// SetGroupCode gets a reference to the given string and assigns it to the GroupCode field.
func (o *ProductSummary) SetGroupCode(v string) {
	o.GroupCode = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *ProductSummary) GetImage() string {
	if o == nil || o.Image == nil {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSummary) GetImageOk() (*string, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *ProductSummary) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *ProductSummary) SetImage(v string) {
	o.Image = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ProductSummary) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSummary) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ProductSummary) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ProductSummary) SetUrl(v string) {
	o.Url = &v
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *ProductSummary) GetCategories() []int64 {
	if o == nil || o.Categories == nil {
		var ret []int64
		return ret
	}
	return *o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProductSummary) GetCategoriesOk() (*[]int64, bool) {
	if o == nil || o.Categories == nil {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *ProductSummary) HasCategories() bool {
	if o != nil && o.Categories != nil {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []int64 and assigns it to the Categories field.
func (o *ProductSummary) SetCategories(v []int64) {
	o.Categories = &v
}

func (o ProductSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ArticleNumber != nil {
		toSerialize["ArticleNumber"] = o.ArticleNumber
	}
	if o.Name != nil {
		toSerialize["Name"] = o.Name
	}
	if o.Price != nil {
		toSerialize["Price"] = o.Price
	}
	if o.Brand != nil {
		toSerialize["Brand"] = o.Brand
	}
	if o.Stock != nil {
		toSerialize["Stock"] = o.Stock
	}
	if o.GroupCode != nil {
		toSerialize["GroupCode"] = o.GroupCode
	}
	if o.Image != nil {
		toSerialize["Image"] = o.Image
	}
	if o.Url != nil {
		toSerialize["Url"] = o.Url
	}
	if o.Categories != nil {
		toSerialize["Categories"] = o.Categories
	}
	return json.Marshal(toSerialize)
}

type NullableProductSummary struct {
	value *ProductSummary
	isSet bool
}

func (v NullableProductSummary) Get() *ProductSummary {
	return v.value
}

func (v *NullableProductSummary) Set(val *ProductSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableProductSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableProductSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProductSummary(val *ProductSummary) *NullableProductSummary {
	return &NullableProductSummary{value: val, isSet: true}
}

func (v NullableProductSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProductSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


