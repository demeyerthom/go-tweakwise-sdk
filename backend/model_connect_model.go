/*
Tweakwise Navigator Backend API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package backend

import (
	"encoding/json"
)

// ConnectModel Model for creation Shopware6 connection to Tweakwise
type ConnectModel struct {
	// Shopware6 ShopId
	ShopId *string `json:"ShopId,omitempty"`
	// Tweakwise InstanceKey
	InstanceKey *string `json:"InstanceKey,omitempty"`
}

// NewConnectModel instantiates a new ConnectModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectModel() *ConnectModel {
	this := ConnectModel{}
	return &this
}

// NewConnectModelWithDefaults instantiates a new ConnectModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectModelWithDefaults() *ConnectModel {
	this := ConnectModel{}
	return &this
}

// GetShopId returns the ShopId field value if set, zero value otherwise.
func (o *ConnectModel) GetShopId() string {
	if o == nil || o.ShopId == nil {
		var ret string
		return ret
	}
	return *o.ShopId
}

// GetShopIdOk returns a tuple with the ShopId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectModel) GetShopIdOk() (*string, bool) {
	if o == nil || o.ShopId == nil {
		return nil, false
	}
	return o.ShopId, true
}

// HasShopId returns a boolean if a field has been set.
func (o *ConnectModel) HasShopId() bool {
	if o != nil && o.ShopId != nil {
		return true
	}

	return false
}

// SetShopId gets a reference to the given string and assigns it to the ShopId field.
func (o *ConnectModel) SetShopId(v string) {
	o.ShopId = &v
}

// GetInstanceKey returns the InstanceKey field value if set, zero value otherwise.
func (o *ConnectModel) GetInstanceKey() string {
	if o == nil || o.InstanceKey == nil {
		var ret string
		return ret
	}
	return *o.InstanceKey
}

// GetInstanceKeyOk returns a tuple with the InstanceKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectModel) GetInstanceKeyOk() (*string, bool) {
	if o == nil || o.InstanceKey == nil {
		return nil, false
	}
	return o.InstanceKey, true
}

// HasInstanceKey returns a boolean if a field has been set.
func (o *ConnectModel) HasInstanceKey() bool {
	if o != nil && o.InstanceKey != nil {
		return true
	}

	return false
}

// SetInstanceKey gets a reference to the given string and assigns it to the InstanceKey field.
func (o *ConnectModel) SetInstanceKey(v string) {
	o.InstanceKey = &v
}

func (o ConnectModel) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ShopId != nil {
		toSerialize["ShopId"] = o.ShopId
	}
	if o.InstanceKey != nil {
		toSerialize["InstanceKey"] = o.InstanceKey
	}
	return json.Marshal(toSerialize)
}

type NullableConnectModel struct {
	value *ConnectModel
	isSet bool
}

func (v NullableConnectModel) Get() *ConnectModel {
	return v.value
}

func (v *NullableConnectModel) Set(val *ConnectModel) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectModel) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectModel(val *ConnectModel) *NullableConnectModel {
	return &NullableConnectModel{value: val, isSet: true}
}

func (v NullableConnectModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


